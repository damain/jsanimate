export default class Animate{constructor(t){try{this.element=selector(t)}catch(t){console.log(t.message)}this.rem=getComputedStyle(document.documentElement).fontSize,this.setDefaultProperties()}computeChange(t,e){let i=this.determineUnit(t);if(null===i)return e;if(i===this.determineUnit(e))return this.sameUnitAddition(t,e,i);switch(key){case value:}}determineUnit(t){return"string"!=typeof t?null:t.includes("px")?"px":t.includes("rem")?"rem":t.includes("%")?"%":t.includes("turn")?"turn":null}differentUnitAddition(t,e,i,s){return parseFloat(t.split(unit)[0])+parseFloat(e.split(unit)[0])+unit}fade(t=!0){return this.shouldFade=t,this}perspective(t="none"){return this.localPerspective=t,this}pxToPercent(t,e){let i,s=getComputedStyle(this.element);return parseFloat(t.replace("px",""))/(i="x"?parseFloat(s.height.replace("px","")):parseFloat(s.width.replace("px","")))*100}reverse(){return null===this.lastAnimation?this:(this.lastAnimation.reverse(),this)}reset(){return this.setDefaultProperties(),this.run(),this}rotate({angle:t=0,add:e=!1}){return"number"==typeof arguments[0]&&(t=arguments[0]),e?this.angle+=t:this.angle=t,this}rotateX(t="0deg"){return this.rotation.x=t,this}rotateY(t="0deg"){return this.rotation.y=t,this}rotateZ(t="0deg"){return this.rotation.z=t,this}run(t={}){let e=getDefaultOptions(t);this.element.parentElement.style.perspective=this.hasPerspective?this.distance:"none";let i=this.element.animate([{transformOrigin:this.origin,transform:` \n          perspective(${this.localPerspective})\n          scale(${this.size.x}, ${this.size.y})\n          translate(${this.cords.x}, ${this.cords.y})\n          rotate(${this.angle}deg) \n          rotateX(${this.rotation.x})\n          rotateY(${this.rotation.y})\n          rotateZ(${this.rotation.z})\n          translateX(${this.cords3D.x})\n          translateY(${this.cords3D.y})\n          translateZ(${this.cords3D.z})\n          `,opacity:this.shouldFade?0:1}],{...e});return this.lastAnimation=i,i.play(),i.onfinish=(()=>{null!==this.onFinish&&this.onFinish()}),this.animationArray=[],this}sameUnitAddition(t,e,i){return parseFloat(t.replace(i,""))+parseFloat(e.replace(i,""))+i}scale({x:t=1,y:e=1,add:i=!1}){return"number"==typeof arguments[0]&&(t=e=arguments[0]),"object"==typeof arguments[0]&&(arguments[0].hasOwnProperty("x")&&!arguments[0].hasOwnProperty("y")&&(e=t),arguments[0].hasOwnProperty("y")&&!arguments[0].hasOwnProperty("x")&&(t=e)),this.size=i?{x:this.size.x+t,y:this.size.y+e}:{x:t,y:e},this}set3DPerspective(t=!1,e="none"){return this.hasPerspective=t,this.distance=e,this}setDefaultProperties(){this.pageWidth,this.animationArray=[],this.size={x:1,y:1},this.cords={x:0,y:0},this.cords3D={x:0,y:0,z:0},this.angle=0,this.lastAnimation=null,this.onFinish=null,this.shouldFade=!1,this.distance="1px",this.hasPerspective=!1,this.localPerspective="none",this.rotation={x:"0deg",y:"0deg",z:"0deg"},this.origin="center"}translate({x:t,y:e,add:i=!1}){return"number"==typeof t&&(t=`${t}px`),"number"==typeof e&&(e=`${e}px`),this.cords=i?{x:this.computeChange(this.cords.x,t),y:this.computeChange(this.cords.y,e)}:{x:t,y:e},this}translateX(t="0deg"){return this.cords3D.x=t,this}translateY(t="0deg"){return this.cords3D.y=t,this}translateZ(t="0deg"){return this.cords3D.z=t,this}transformOrigin(t="center"){return this.origin=t,this}}const getDefaultOptions=t=>{const{composite:e="replace",delay:i=0,direction:s="normal",duration:r=1e3,easing:n="cubic-bezier(0.34, 1, 0.64, 1)",endDelay:a=0,fill:o="forwards",iterationStart:h=0,iterations:l="1",iterationComposite:c="replace"}=t||{};return{...t,delay:i,direction:s,duration:r,easing:n,endDelay:a,fill:o,iterationStart:h,iterations:l,composite:e,iterationComposite:c}},getPositionFromMatrix=t=>{if("none"===t)return{x:0,y:0};let e=t.split(",");return{x:parseInt(e[4]),y:parseInt(e[5])}},sum=(t,e)=>parseInt(t)+parseInt(e);export const selector=t=>{switch(typeof t){case"string":let e=document.querySelector(t);if(e instanceof HTMLElement)return e;throw new Error("The string provided was not found");case"object":if(t instanceof HTMLElement)return t;throw new Error("Object must be a valid HTMLElement");default:throw new Error("Must be an HTMLElement or string")}};